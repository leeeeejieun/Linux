---
- name: "MMN psqlserver - Make sure config path is present for container"
  ansible.builtin.file:
    path: "{{ psqlserver_instance.value.configpath }}"
    state: directory

- name: "MMN psqlserver - Prepare init script path"
  ansible.builtin.file:
    state: directory
      #path: "{{ initscript.targetpath }}"
    path: "{{ psqlserver_instance.value.templatespath_destination }}"
    mode: '0755'
  when: psqlserver_instance.value.templatespath_destination is defined

# INIT SCRIPTS AND SQL FILES 
# FOLDERCHECKS
- name: "MMN psqlserver - Init files deployment"
  when: 
    - psqlserver_instance.value.templatespath_source is defined
    - psqlserver_instance.value.templatespath_destination is defined
  block:
    - name: "MMN psqlserver - Check if template SOURCE directory exists (on control node)"
      delegate_to: localhost
      become: false
      run_once: true
      stat:
        path: "{{ psqlserver_instance.value.templatespath_source }}"
      register: stat_templatespath_source
    - name: "MMN psqlserver - Check if template TARGET directory exists (on target node)"
      run_once: true
      stat:
        path: "{{ psqlserver_instance.value.templatespath_destination }}"
      register: stat_templatespath_destination
    # SHELL SCRIPTS
    - name: "MMN psqlserver - Place init script files"
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "{{ psqlserver_instance.value.templatespath_destination }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
      with_fileglob:
        - "{{ psqlserver_instance.value.templatespath_source }}/*.sh.j2"
      when:
        - ( stat_templatespath_source.stat.exists is defined ) and ( stat_templatespath_source.stat.exists )
        - ( stat_templatespath_destination.stat.exists is defined ) and ( stat_templatespath_destination.stat.exists )
    # SQL FILES
    - name: "MMN psqlserver - Place sql files"
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "{{ psqlserver_instance.value.templatespath_destination }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
      with_fileglob:
        - "{{ psqlserver_instance.value.templatespath_source }}/*.sql.j2"
      when:
        - ( stat_templatespath_source.stat.exists is defined ) and ( stat_templatespath_source.stat.exists )
        - ( stat_templatespath_destination.stat.exists is defined ) and ( stat_templatespath_destination.stat.exists )
    # SQL.GZ FILES
    - name: "MMN psqlserver - Place sql.gz files"
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ psqlserver_instance.value.templatespath_destination }}/{{ item | basename }}"
      with_fileglob:
        - "{{ psqlserver_instance.value.templatespath_source }}/*.sql.gz"
      when:
        - ( stat_templatespath_source.stat.exists is defined ) and ( stat_templatespath_source.stat.exists )
        - ( stat_templatespath_destination.stat.exists is defined ) and ( stat_templatespath_destination.stat.exists )

          # I believe this is too early to put it here as db possibly needs to initialize first
          #- name: "MMN psqlserver - Provide postgres config for container"
          #  ansible.builtin.template:
          #    src: "{{ psqlserver_configtemplate }}"
          #    dest: "{{ psqlserver_instance.value.configpath | default(psqlserver_configpath) }}/{{ psqlserver_instance.value.configname | default(psqlserver_configname) }}"
          #    mode: 0600
          #    owner: "999"
          #    group: "999"
          #  when: not psqlserver_isreplica | default(False)
          #  notify: restart postgres container
